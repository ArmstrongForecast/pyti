from __future__ import absolute_import
import unittest
import numpy as np

from tests.sample_data import SampleData
from pyti import smoothed_moving_average


class TestSmoothedMovingAverage(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.data = SampleData().get_sample_close_data()

        self.smmma_period_6_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        246.68995370370371, 247.56712962962965, 248.35231481481483,
        248.0858796296296, 247.64046296296297, 248.79050925925927,
        249.35388888888892, 249.00157407407406, 247.59259259259261,
        247.78032407407409, 245.06074074074073, 243.88435185185185,
        240.37050925925928, 239.85125000000002, 236.55236111111108,
        235.48625000000001, 236.96472222222224, 239.17773148148149,
        238.79185185185187, 237.90601851851852, 238.04259259259257,
        239.52106481481482, 239.69421296296295, 237.91074074074075,
        239.61763888888891, 238.5825462962963, 237.69032407407406,
        233.29800925925929, 236.08425925925926, 237.60759259259257,
        242.27402777777777, 244.07976851851853, 243.04342592592593,
        240.200462962963, 240.62379629629632, 241.85032407407411,
        244.69111111111113, 245.37962962962965, 247.39541666666665,
        247.86620370370372, 249.581712962963, 251.58564814814812,
        253.48444444444445, 251.86555555555552, 251.5084722222222,
        252.6439351851852, 251.69648148148147, 248.75226851851855,
        247.65810185185191, 247.10893518518523, 248.1623611111111,
        247.39013888888886, 247.98736111111111, 245.60212962962964,
        245.96194444444447, 245.58763888888893, 245.63976851851848,
        245.02537037037033, 245.40467592592594, 245.21268518518522,
        246.6109259259259, 246.9425, 245.59259259259258, 247.98175925925929,
        248.42199074074074, 246.65731481481484, 245.54435185185184,
        244.45759259259262, 244.77925925925925, 245.00476851851855,
        242.61972222222224, 241.9521759259259, 243.61328703703703,
        241.73000000000002, 244.2360648148148, 245.25087962962962,
        245.66236111111115, 243.99268518518519, 242.9092592592593,
        242.68263888888887, 242.77486111111111, 243.14314814814816,
        242.36722222222224, 241.918287037037, 242.35254629629631,
        243.00689814814814, 243.18333333333337, 243.72199074074072,
        244.45925925925926, 245.23111111111112, 244.70180555555558,
        245.71370370370369, 246.12916666666669, 246.51874999999998,
        246.6999537037037, 246.57930555555552, 246.2978240740741,
        246.60361111111112, 244.76342592592593, 244.82694444444442,
        244.83319444444444, 244.81847222222223, 242.89694444444444,
        237.69578703703704, 236.23412037037039, 234.55879629629626,
        233.5510185185185, 232.88, 231.21347222222221, 231.45569444444445,
        230.6458796296296, 230.50787037037037, 227.07282407407411,
        226.55763888888887, 224.92722222222224, 224.86347222222221,
        223.37175925925928, 220.98185185185184, 218.57180555555556,
        218.23574074074077, 216.98652777777775, 217.36458333333334]

        self.smmma_period_8_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, 190.14798828125001, 190.08460937500001,
        189.84726562500001, 190.72499999999999, 191.113828125, 190.8981640625,
        189.94382812499998, 190.09998046875, 188.0411328125, 187.29111328125001,
        184.91966796874999, 184.6629296875, 182.21244140624998,
        181.49878906250001, 182.504765625, 183.92619140624998,
        183.34169921874999, 182.48886718750001, 182.37742187500001,
        183.22011718750002, 183.473203125, 182.52859375, 183.94289062500002,
        183.04105468749998, 182.29322265625001, 179.18185546875, 181.398984375,
        182.40208984374999, 185.84882812500001, 187.13990234375001, 186.113125,
        183.51218750000001, 183.74455078125001, 185.00455078125, 187.598203125,
        188.55552734374999, 189.95402343749998, 189.75119140625003,
        190.61933593750001, 192.07431640624998, 193.7051953125,
        192.73246093749998, 192.64951171874998, 193.56703125000001,
        192.89341796874999, 190.91847656250002, 190.39921874999999,
        189.99966796875003, 190.63320312499999, 190.16009765625,
        190.63310546874999, 188.58994140625001, 188.6344921875, 188.32654296875,
        188.49679687499997, 188.1449609375, 188.49955078124998,
        188.22730468750001, 189.09861328124998, 189.31935546874999,
        188.30347656250001, 190.02994140625, 190.33361328125,
        189.03218749999999, 188.31742187499998, 187.66955078125,
        187.82675781250001, 188.104375, 186.59146484375, 186.01521484375002,
        187.043515625, 185.52474609375003, 187.36158203125001,
        188.17759765624999, 188.31874999999999, 186.86539062500003,
        186.19449218749997, 186.01619140625002, 186.18060546875,
        186.76845703124999, 186.31193359375001, 185.84375, 185.93410156250002,
        186.30402343750001, 186.42490234375001, 186.89638671874999,
        187.43195312500001, 187.89695312499998, 187.47716796875002,
        188.27384765625001, 188.59398437499999, 188.89646484375001,
        189.09048828125, 189.0712890625, 188.8239453125, 189.05708984375002,
        187.79322265625001, 187.90572265624999, 187.96097656249998,
        187.96421875000001, 186.52974609375002, 182.77294921875,
        181.69775390625, 180.48400390625, 179.92457031250001,
        179.60261718749999, 178.36892578125003, 178.10302734375,
        177.12570312499997, 176.926640625, 174.3702734375, 174.09279296874999,
        172.91943359375, 172.9321875, 171.89642578125, 170.18162109374998,
        168.23566406250001, 167.84470703125001, 166.91443359375,
        167.23511718750001]

        self.smmma_period_10_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, np.nan, np.nan, 153.67744999999999, 154.46725000000001,
        154.82634000000002, 154.66827000000001, 153.90600000000001, 154.07585,
        152.51725999999999, 151.96069000000003, 150.08051, 149.97599,
        148.19157000000001, 147.71669, 148.49359999999999, 149.6165,
        149.05250999999998, 148.23025999999999, 147.96473, 148.50650000000002,
        148.56408000000002, 147.66083, 148.87512999999998, 148.39798000000002,
        147.90949999999998, 145.38952, 147.11615999999998, 147.97096999999999,
        150.74028000000001, 151.62209999999999, 150.78217000000001,
        148.73534000000001, 148.80860999999999, 149.50757000000002,
        151.48645000000002, 152.43856999999997, 153.83485999999999,
        153.94740000000002, 154.57098999999999, 155.36511999999999,
        156.38750999999999, 155.60615000000001, 155.71811, 156.61214000000001,
        156.19622999999999, 154.70368999999999, 154.34504999999999, 154.17362,
        154.84965, 154.45883000000001, 154.72469999999998, 153.16855000000001,
        153.23859999999999, 152.82086000000001, 152.80856, 152.50942000000001,
        152.87255999999996, 152.7176, 153.44421, 153.52164999999999, 152.60997,
        153.96922000000001, 154.18405000000001, 153.12624999999997,
        152.57415999999998, 152.09025000000003, 152.29344, 152.60675000000001,
        151.35335000000001, 150.98126000000002, 151.95679000000001, 150.68447,
        152.00248000000002, 152.54411999999999, 152.62127999999998,
        151.51960000000003, 150.91347000000002, 150.65604999999999,
        150.87619000000001, 151.33009000000001, 151.01969, 150.85306999999997,
        150.99991, 151.19630999999998, 151.13267999999999, 151.42770000000002,
        151.83985000000001, 152.24697999999998, 151.90741, 152.47566999999998,
        152.70913999999999, 152.97624000000002, 153.13925, 153.13625999999999,
        152.98578000000003, 153.22130000000001, 152.2038, 152.31229999999999,
        152.42267000000001, 152.45949000000002, 151.35810000000001, 148.42686,
        147.62118000000001, 146.74070999999998, 146.29831999999999,
        146.04546999999999, 145.17291, 145.06334999999999, 144.27596,
        143.82530000000003, 141.56691000000001, 141.31354999999999, 140.38914,
        140.46588, 139.66199999999998, 138.34649999999999, 136.87015, 136.60816,
        135.76348000000002, 135.91293000000002]

    def test_smma_period_6(self):
        period = 6
        smma = smoothed_moving_average.smoothed_moving_average(self.data, period)
        np.testing.assert_array_equal(smma, self.smmma_period_6_expected)

    def test_smma_period_8(self):
        period = 8
        smma = smoothed_moving_average.smoothed_moving_average(self.data, period)
        np.testing.assert_array_equal(smma, self.smmma_period_8_expected)

    def test_smma_period_10(self):
        period = 10
        smma = smoothed_moving_average.smoothed_moving_average(self.data, period)
        np.testing.assert_array_equal(smma, self.smmma_period_10_expected)

    def test_smma_invalid_period(self):
        period = 128
        with self.assertRaises(Exception) as cm:
            smoothed_moving_average.smoothed_moving_average(self.data, period)
        expected = "Error: data_len < period"
        self.assertEqual(str(cm.exception), expected)
